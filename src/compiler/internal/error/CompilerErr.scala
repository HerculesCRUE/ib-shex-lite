/*
 * Short version for non-lawyers:
 *
 * The ShEx Lite Project is dual-licensed under GNU 3.0 and
 * MIT terms.
 *
 * Longer version:
 *
 * Copyrights in the ShEx Lite project are retained by their contributors. No
 * copyright assignment is required to contribute to the ShEx Lite project.
 *
 * Some files include explicit copyright notices and/or license notices.
 * For full authorship information, see the version control history.
 *
 * Except as otherwise noted (below and/or in individual files), ShEx Lite is
 * licensed under the GNU, Version 3.0 <LICENSE-GNU> or
 * <https://choosealicense.com/licenses/gpl-3.0/> or the MIT license
 * <LICENSE-MIT> or <http://opensource.org/licenses/MIT>, at your option.
 *
 * The ShEx Lite Project includes packages written by third parties.
 */

package internal.error

/**
 * Compiler implementation of the error trait.
 *
 * @param source    where the event that generated the error is located.
 * @param errorType is the type of the error generated by the event located in the source.
 */
class CompilerErr(val source: ErrSource, val errorType: ErrType) extends Err {

  MemoryErrorHandler.addError(this)

  override def toString: String = {
    val sb = new StringBuilder()

    sb.append(s"error[${errorType.code}]: ${errorType.description}")
    sb.append(s" --> ${source.line}:${source.column}")
    sb.append(s" --> ${source.cause}")

    sb.toString()
  }
}